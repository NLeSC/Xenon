// Build file which can only run when dependencies and plugins have been downloaded.

//    PLUGINS
// ==============
plugins {
    // Changes in the plugins section should be also be applied to build.offline.gradle
    id 'java'
    id 'distribution'
    // publishing
    id 'maven-publish'
    id 'com.jfrog.bintray' version '1.2'
    // ide
    id 'idea'
    id 'eclipse'

    // integration tests
    id 'org.hidetake.ssh' version '1.1.3'
    // code coverage
    id 'jacoco'
    // quality
    id 'org.sonarqube' version '1.0'
    id 'pmd'
}

apply from: 'gradle/common.gradle'
apply from: 'gradle/integrationTest.gradle'
apply from: 'gradle/codestyle.gradle'

//  DEPENDENCIES
// ==============

// Online dependencies
repositories {
    mavenCentral()
    jcenter()
}

ext.jschVersion = '0.1.50'
ext.apacheCommonsNetVersion = '3.3'

dependencies {
    // Xenon dependencies.
    // xenon/lib/**/*.jar to ./lib/
    compile group: 'com.jcraft', name: 'jsch', version: jschVersion
    compile group: 'commons-net', name: 'commons-net', version: apacheCommonsNetVersion
    compile group: 'com.google.code.findbugs', name: 'findbugs', version: '2.0.2'
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.5'

    // Runtime dependencies
    runtime group: 'ch.qos.logback', name: 'logback-core', version: '1.0.11'
    runtime group: 'ch.qos.logback', name: 'logback-classic', version: '1.0.11'

    // Testing dependencies
    testCompile group: 'junit', name: 'junit', version: '4.11'
    testCompile group: 'org.hamcrest', name: 'hamcrest-core', version: '1.3'
    testCompile group: 'org.hamcrest', name: 'hamcrest-library', version: '1.3'
    testCompile group: 'org.mockito', name: 'mockito-all', version: '1.9.5'

    userguideCompile sourceSets.main.output
    examplesCompile sourceSets.main.output
}

task downloadCompileDependencies(type: Copy) {
    from configurations.compile.files
    into compileLibDir
}

task downloadTestDependencies(type: Copy) {
    from (configurations.testCompile.files - configurations.compile.files)
    into testLibDir
}

task downloadRuntimeDependencies(type: Copy) {
    from (configurations.runtime.files - configurations.compile.files)
    into runtimeLibDir
}

task downloadCodestyleDependencies(type: Copy) {
    from configurations.pmd.files
    into codestyleLibDir
}

task downloadDependencies(dependsOn: [
        downloadCompileDependencies,
        downloadTestDependencies,
        downloadRuntimeDependencies,
        downloadCodestyleDependencies
    ]) {
    description "download all Java dependencies, as resolved by gradle, into the lib directory"
}

//  PUBLISH
// =========
bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_KEY')
    pkg {
        repo = 'xenon'
        name = 'xenon'
        desc = description
        userOrg = 'nlesc'
        licenses = ['Apache-2.0']
        websiteUrl = 'https://nlesc.github.io/Xenon'
        vcsUrl = 'https://github.com/NLeSC/Xenon.git'
        issueTrackerUrl = 'https://github.com/NLeSC/Xenon/issues'
    }
    publications = ['MyPublication']
}
