language: java

matrix:
  # Only do docker integration tests with Oracle JDK 8: the docker
  # tests are not affected by JDK on host system.
  include:
    - jdk: oraclejdk8
      env:
        - GRADLE_BUILD_TASKS="assemble"
        - GRADLE_SCRIPT_TASKS="check"
        - INTEGRATION_TEST="integration"
        - JDK=oraclejdk8
        - OS=linux
      sudo: true
      dist: trusty
      services:
        - docker
      addons:
        sonarqube:
          organization: nlesc
      os: linux
  # TODO add osx tests only run unit tests and local test of fixedClientEnvironmentTest
  # Stop when one of the Java versions do not work
  fast_finish: true

before_install:
  - docker-compose --version;

install:
  - ./gradlew $GRADLE_BUILD_TASKS

script:
  - ./gradlew $GRADLE_SCRIPT_TASKS

after_script:
  - if [ $INTEGRATION_TEST == "integration" ]; then
    ./src/fixedClientEnvironmentTest/resources/run-fixed-client-environment-test.sh
    ./gradlew jacocoIntegrationTestReport jacocoFixedClientEnvironmentTestReport;
    bash <(curl -s https://codecov.io/bash) -e JDK,INTEGRATION_TEST,OS -f build/reports/jacoco/jacocoIntegrationTestReport/jacocoIntegrationTestReport.xml;
    export INTEGRATION_TEST="FixedClientEnvironment"
    bash <(curl -s https://codecov.io/bash) -e JDK,INTEGRATION_TEST,OS -f build/reports/jacoco/jacocoFixedClientEnvironmentTestReport/jacocoFixedClientEnvironmentTestReport.xml;
    sonar-scanner -Dsonar.login=$SONAR_TOKEN;
    elif [ $INTEGRATION_TEST == "local" ]; then
    ./gradlew jacocoIntegrationTestReport;
    bash <(curl -s https://codecov.io/bash) -e JDK,INTEGRATION_TEST,OS -f build/reports/jacoco/jacocoIntegrationTestReport/jacocoIntegrationTestReport.xml;
    else
    ./gradlew jacocoTestReport;
    bash <(curl -s https://codecov.io/bash) -e JDK,INTEGRATION_TEST,OS -f build/reports/jacoco/test/jacocoTestReport.xml;
    fi
